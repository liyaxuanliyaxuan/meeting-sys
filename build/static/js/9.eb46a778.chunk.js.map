{"version":3,"sources":["components/commons/Button/Button.tsx","components/commons/Button/index.ts","components/commons/Button/Button.module.scss","components/forms/Input/Input.tsx","components/forms/Input/Input.module.scss","components/forms/Input/index.ts","utils/validate.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","components/forms/RadioGroup/RadioGroup.module.scss","components/forms/RadioGroup/RadioGroup.tsx","components/forms/RadioGroup/index.ts","constant/index.ts","components/forms/Avatar/Avatar.module.scss","pages/Center/Info/Info.module.scss","components/forms/Avatar/Avatar.tsx","pages/Center/Info/index.tsx"],"names":["MyButton","type","value","className","color","fontSize","onClick","loading","disabled","size","htmlType","style","btn","module","exports","Input","props","name","placeholder","bind","msg","warn","readOnly","update","hasBtn","btnValue","btnCallback","btnStatus","dateCallback","onFocus","onBlur","onInput","useState","isShowPwd","setIsShowPwd","isReadOnly","setIsReadOnly","toggleShowPwd","container","label","input","onChange","bindEvent","eye","EMAIL","PHONE","validate","instance","Constructor","TypeError","required","isNull","isEmpty","checkLength","length","isEmail","test","isPhoneNumber","RadioGroup","radioList","initialData","checkedTarget","setCheckedTarget","useOnUpdate","e","target","map","item","radio","key","checked","verificationWaitTime","Avatar","avatar","setAvatar","reader","FileReader","readAsDataURL","onload","result","src","alt","img","files","Info","useCountDown","count","start","verificationStatus","loadStatus","gender","setGender","showModal","setShowModal","verificationValue","setVerificationValue","useChange","mail","phone","changePwd","changeMailOrPhone","changeVerificationCode","isValidateRight","setIsValidateRight","auth","useAuth","history","useHistory","authC","authContainer","useContainer","useImmer","isRight","pwd","verification","validateMsg","setValidateMsg","userInfoR","useRequest","getUserInfo","onSuccess","param","data","info","setValue","username","emailaddr","updateUserR","userJson","updateUser","manual","updateUserAvatarR","formData","uploadUserIcon","updatePwdR","mailAddr_or_Phone","password","verificationCode","updatePwd","params","code","message","success","clearToken","setIsLogin","push","getVerificationCodeR","getVerificationCode","validateForm","validatePhoneOrMail","draft","validateVerification","validatePwd","validateKey","useDebounceFn","checkValidate","handleSubmit","a","preventDefault","avatarFormdata","FormData","set","run","get","spinning","onSubmit","title","visible","onOk","onCancel","confirmLoading","okButtonProps","fix","Button"],"mappings":"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","file":"static/js/9.eb46a778.chunk.js","sourcesContent":["/**\r\n * @ Author: zao\r\n * @ Create Time: 2020-03-20\r\n * @ Modified by: zao\r\n * @ Description: 全局button组件\r\n */\r\n\r\nimport React, { ReactElement } from 'react';\r\nimport {Button} from 'antd'\r\n\r\nimport style from './Button.module.scss';\r\n\r\ninterface Props {\r\n  type?: 'button' | 'reset' | 'submit';\r\n  value: string;\r\n  className?: string;\r\n  onClick?: any;\r\n  color?: string;\r\n  fontSize?: number;\r\n  loading?: boolean;\r\n  disabled?: boolean;\r\n  size?:'large'|'middle'|'small';\r\n}\r\n\r\nfunction MyButton({ type = 'button', value, className, color, fontSize, onClick,loading=false,disabled,size }: Props): ReactElement {\r\n  return (\r\n    // <button type={type} className={`${style.btn} ${className}`} style={{ 'backgroundColor': color, 'fontSize': `${fontSize}px` }} onClick={onClick}>{value}</button>\r\n    <Button type='primary' size={size} htmlType={type} loading={loading} className={`${style.btn} ${className}`} style={{ 'backgroundColor': color, 'fontSize': `${fontSize}px` }} onClick={onClick} disabled={disabled}>{value}</Button>\r\n  )\r\n}\r\n\r\nexport default MyButton\r\n","export {default} from './Button'","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2fuTG\"};","/**\r\n * @ Author: zao\r\n * @ Create Time: 2020-03-20\r\n * @ Modified by: zao\r\n * @ Description: 全局input，仅包含text和password，配合useOnChange使用\r\n */\r\n\r\nimport React, {\r\n  ReactElement,\r\n  useState,\r\n} from 'react';\r\n\r\nimport {\r\n  EyeInvisibleOutlined,\r\n  EyeOutlined,\r\n} from '@ant-design/icons';\r\nimport { DatePicker } from 'antd'\r\n\r\nimport style from './Input.module.scss';\r\n\r\ninterface Props {\r\n  type: 'text' | 'password' | 'Date';\r\n  name: string; // input框前面的文字\r\n  placeholder?: string;\r\n  msg?: string;  // input下方的提示语\r\n  warn?: boolean; // input msg的警告\r\n  bind?: {\r\n    bindEvent: {\r\n      onChange: (e: React.SyntheticEvent) => any;\r\n      value: string;\r\n    }\r\n  }; // 双向绑定input事件\r\n  className?: string;\r\n  readOnly?: boolean;\r\n  value?: string;\r\n  update?: boolean;\r\n  hasBtn?: boolean;\r\n  btnValue?: string;\r\n  btnStatus?: boolean;\r\n  btnCallback?: (e: React.SyntheticEvent) => any;\r\n  dateCallback?: (...params: any) => any;\r\n  onFocus?: (e: React.SyntheticEvent) => any;\r\n  onBlur?: (e: React.SyntheticEvent) => any;\r\n  onInput?: (e: React.SyntheticEvent) => any;\r\n}\r\n\r\nfunction Input(props: Props): ReactElement {\r\n  const {\r\n    type,\r\n    name,\r\n    placeholder = '点击编辑内容',\r\n    bind,\r\n    msg,\r\n    warn = false,\r\n    readOnly = false,\r\n    update = false,\r\n    value,\r\n    hasBtn = false,\r\n    btnValue = '',\r\n    btnCallback,\r\n    btnStatus = false,\r\n    dateCallback,\r\n    onFocus,\r\n    onBlur,\r\n    onInput\r\n  } = props\r\n  const [isShowPwd, setIsShowPwd] = useState(false)\r\n  const [isReadOnly, setIsReadOnly] = useState(readOnly)\r\n  const toggleShowPwd = () => {\r\n    setIsShowPwd(!isShowPwd)\r\n  }\r\n  return (\r\n    <div className={`${style.container} ${props.className}`}>\r\n      <label className={style.label}>\r\n        <span className={style.name}>{name}</span>\r\n        {type === 'Date' ? <DatePicker className={style.input} placeholder='选择日期' onChange={dateCallback}/> :\r\n          <input\r\n            className={style.input}\r\n            type={!(type === 'password') ?\r\n              type\r\n              :\r\n              isShowPwd ?\r\n                'text' : 'password'\r\n            }\r\n            placeholder={placeholder}\r\n            readOnly={isReadOnly}\r\n            value={value || ''}\r\n            {...bind?.bindEvent}\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            onInput={onInput}\r\n          />}\r\n        {type === 'password' ?\r\n          isShowPwd ?\r\n            <EyeOutlined className={style.eye} onClick={toggleShowPwd} />\r\n            :\r\n            <EyeInvisibleOutlined className={style.eye} onClick={toggleShowPwd} />\r\n          :\r\n          null}\r\n        {hasBtn ? (<button\r\n          className={btnStatus ? style.disabled : style.btn}\r\n          disabled={btnStatus}\r\n          onClick={btnCallback}>{btnValue}</button>) : null}\r\n        {update ? (<span className={style.update} onClick={() => setIsReadOnly(false)}>修改</span>) : null}\r\n      </label>\r\n\r\n\r\n      <span className={warn ? style.warn : style.msg}>{msg}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__3-eAs\",\"label\":\"Input_label__3ZyMx\",\"name\":\"Input_name__2N1NA\",\"input\":\"Input_input__1mIb6\",\"btn\":\"Input_btn__1Ye5Q\",\"disabled\":\"Input_disabled__1kEQs\",\"eye\":\"Input_eye__3KZCz\",\"msg\":\"Input_msg__1Vo6u\",\"warn\":\"Input_warn__1I9dP\",\"update\":\"Input_update__1venh\"};","export {default} from './Input'","import { isNull, isEmpty } from 'lodash'\r\nconst EMAIL = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\nconst PHONE = /^1[34578]\\d{9}$/;\r\n\r\nexport const required = (value: string) => {\r\n  if (isNull(value) || isEmpty(value)) {\r\n    return false\r\n  } else {\r\n    return true\r\n  }\r\n}\r\n\r\nexport const checkLength = (value: string, length: number) => {\r\n  if (value.length <= length) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const isEmail = (value: string) => {\r\n  return EMAIL.test(value)\r\n}\r\n\r\nexport const isPhoneNumber = (value: string) => {\r\n  return PHONE.test(value)\r\n}\r\n\r\nclass validate {\r\n  static required = required  \r\n  static checkLength = checkLength\r\n  static isEmail = isEmail\r\n  static isPhoneNumber=isPhoneNumber\r\n}\r\n\r\nexport default validate\r\n\r\n\r\n\r\n\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RadioGroup_container__1_K-d\",\"name\":\"RadioGroup_name__2eY-s\",\"radioList\":\"RadioGroup_radioList__1s6DY\",\"radio\":\"RadioGroup_radio__Jh28g\"};","/**\r\n * @ Author: zao\r\n * @ Create Time: 2020-03-20\r\n * @ Modified by: zao\r\n * @ Description: RadioGroup主要用于性别input选项\r\n */\r\n\r\nimport React, { ReactElement, useState } from 'react';\r\nimport { useOnUpdate } from '@/hooks'\r\nimport style from './RadioGroup.module.scss';\r\n\r\ninterface Props {\r\n  name: string;\r\n  radioList: any[];\r\n  bind: any;\r\n  initialData?: any;\r\n}\r\n\r\nfunction RadioGroup({ name, radioList, bind, initialData = radioList[0] }: Props): ReactElement {\r\n  const [checkedTarget, setCheckedTarget] = useState(initialData)\r\n  const handleChange = (e: any) => {\r\n    bind(e.target.value)\r\n    setCheckedTarget(e.target.value)\r\n  }\r\n  useOnUpdate(() => {\r\n    setCheckedTarget(initialData)\r\n  }, [initialData])\r\n  return (\r\n    <div className={style.container}>\r\n      <span className={style.name}>{name}</span>\r\n      <div className={style.radioList} onChange={handleChange}>\r\n        {radioList.map((item) => {\r\n          return (\r\n            <label className={style.radio} key={item}>\r\n              <input type=\"radio\" name={name} value={item} checked={checkedTarget === item} onChange={() => {\r\n              }} />\r\n              <span>{item}</span>\r\n            </label>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RadioGroup\r\n","export {default} from './RadioGroup'","const normal={}\r\n// 会议类型\r\nexport const meetingTypes = {\r\n  studentTeams: 6, //学生组队\r\n  researchTeams:5, // 科研团队\r\n}\r\n\r\n// 验证码需要等待的时间\r\nexport const verificationWaitTime = 5\r\n\r\nexport const uploadFilerUrl ='http://www.ljhhhx.com:8080/meeting-v2/file'\r\n\r\nexport default normal","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Avatar_container__Raxch\",\"label\":\"Avatar_label__2H65y\",\"img\":\"Avatar_img__1q3pW\",\"input\":\"Avatar_input__1si-m\",\"msg\":\"Avatar_msg__1YOud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Info_container__1OK81\",\"pwd\":\"Info_pwd__3pjph\",\"fix\":\"Info_fix__WzVqW\",\"btn\":\"Info_btn__3Nb3v\"};","/**\r\n * @ Author: zao\r\n * @ Create Time: 2020-03-20\r\n * @ Modified by: zao\r\n * @ Description: 头像组件，主要用于在表单输入时起到头像实时预览和上传数据的作用\r\n */\r\n\r\nimport React, {\r\n  ReactElement,\r\n  useState,\r\n} from 'react';\r\n\r\nimport { useOnMount, useOnUpdate } from '@/hooks'\r\nimport style from './Avatar.module.scss';\r\n\r\ninterface Props {\r\n  msg: string;\r\n  bind: any;\r\n  className?: string;\r\n  initialData?: any;\r\n}\r\n\r\nfunction Avatar({ msg, bind, className, initialData = '' }: Props): ReactElement {\r\n  const [avatar, setAvatar] = useState(initialData)\r\n  const uploadImg = (e: any) => {\r\n    const files = e.target.files;\r\n    if (files && files[0]) {\r\n      let reader: FileReader = new FileReader();\r\n      reader.readAsDataURL(files[0]);\r\n      reader.onload = e => {\r\n        setAvatar(e.target?.result);\r\n        bind(files[0])\r\n      };\r\n    }\r\n  }\r\n  useOnUpdate(() => {\r\n    if (typeof initialData === 'string') {\r\n      setAvatar(initialData)\r\n    } else {\r\n      let reader: FileReader = new FileReader();\r\n      reader.readAsDataURL(initialData);\r\n      reader.onload = e => {\r\n        setAvatar(e.target?.result);\r\n      };\r\n    }\r\n\r\n  }, [initialData])\r\n  return (\r\n    <div className={`${style.container} ${className}`}>\r\n      <label className={style.label}>\r\n        <img src={avatar} alt=\"\" className={style.img} />\r\n        <input onChange={uploadImg} type=\"file\" className={style.input} />\r\n        <span className={style.msg}>{msg}</span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Avatar\r\n","import React, {\r\n  ReactElement,\r\n  useState,\r\n} from 'react';\r\n\r\nimport {\r\n  message,\r\n  Modal,\r\n  Spin,\r\n} from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Button from '@/components/commons/Button';\r\nimport Avatar from '@/components/forms/Avatar';\r\nimport Input from '@/components/forms/Input';\r\nimport RadioGroup from '@/components/forms/RadioGroup';\r\nimport {\r\n  useAuth,\r\n  useChange,\r\n  useCountDown,\r\n  useOnMount,\r\n  useOnUpdate,\r\n} from '@/hooks';\r\nimport {\r\n  getUserInfo,\r\n  getVerificationCode,\r\n  updatePwd,\r\n  updateUser,\r\n  uploadUserIcon,\r\n} from '@/services/apis/user';\r\nimport authContainer from '@/store/auth';\r\nimport { useRequest, useDebounceFn } from '@umijs/hooks';\r\nimport { verificationWaitTime } from '@/constant'\r\nimport style from './Info.module.scss';\r\nimport { useImmer } from 'use-immer'\r\nimport validate from '@/utils/validate'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nfunction Info(props: Props): ReactElement {\r\n  const [count, start, verificationStatus] = useCountDown(verificationWaitTime)\r\n  const [loadStatus, setLoadStatus] = useState(false)\r\n  const [avatar, setAvatar] = useState<any>('')\r\n  const [gender, setGender] = useState<'男' | '女'>('男')\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [verificationValue, setVerificationValue] = useState('获取验证码')\r\n  const name = useChange('')\r\n  const mail = useChange('')\r\n  const phone = useChange('')\r\n  const changePwd = useChange('')\r\n  const changeMailOrPhone = useChange('')\r\n  const changeVerificationCode = useChange('')\r\n  const [isValidateRight, setIsValidateRight] = useState(false)\r\n  // const [changeMsg, setChangeMsg] = useState('')\r\n  const auth = useAuth()\r\n  const history = useHistory()\r\n  const authC = authContainer.useContainer()\r\n\r\n  const [validateMsg, setValidateMsg] = useImmer({\r\n    key: { msg: '手机号尽量与微信号保持一致', warn: false, isRight: false },\r\n    pwd: { msg: '密码不少于8位', warn: false, isRight: false },\r\n    verification: { msg: '', warn: false, isRight: false },\r\n  })\r\n\r\n  const userInfoR = useRequest(getUserInfo, {\r\n    onSuccess: (result, param) => {\r\n      if (result.data) {\r\n        setAvatar(`http://www.ljhhhx.com:8080/meeting/userIcon/${result.data.info.avatar}`)\r\n        setGender(result.data.info.gender)\r\n        name.setValue(result.data.info.username)\r\n        mail.setValue(result.data.info.emailaddr)\r\n        phone.setValue(result.data.info.phone)\r\n      }\r\n    }\r\n  })\r\n  const updateUserR = useRequest((userJson) => updateUser(userJson), { manual: true })\r\n  const updateUserAvatarR = useRequest((formData) => uploadUserIcon(formData), { manual: true })\r\n  const updatePwdR = useRequest((mailAddr_or_Phone, password, verificationCode) => updatePwd(mailAddr_or_Phone, password, verificationCode), {\r\n    manual: true,\r\n    onSuccess: (result, params) => {\r\n      if (result.code >= 0) {\r\n        message.success('修改成功,请重新登录')\r\n        auth.clearToken()\r\n        setShowModal(false)\r\n        authC.setIsLogin(false)\r\n        history.push('/login')\r\n      }\r\n    }\r\n  })\r\n  const getVerificationCodeR = useRequest((mailAddr_or_Phone) => getVerificationCode(mailAddr_or_Phone), { manual: true })\r\n\r\n  const handleModalOk = () => {\r\n    updatePwdR.run(changeMailOrPhone.value, changePwd.value, changeVerificationCode.value)\r\n  }\r\n  const handleModalCancel = () => {\r\n    setShowModal(false)\r\n  }\r\n\r\n  const handleGetVerificationCode = (e: React.SyntheticEvent) => {\r\n    e.preventDefault()\r\n    start()\r\n    if (validateForm.validatePhoneOrMail()) {\r\n      start()\r\n      getVerificationCodeR.run(changeMailOrPhone.value)\r\n    }\r\n  }\r\n\r\n  const validateForm = {\r\n    validatePhoneOrMail: () => {\r\n      if (validate.required(changeMailOrPhone.value)) {\r\n        // 验证正确格式\r\n        if (validate.isPhoneNumber(changeMailOrPhone.value) || validate.isEmail(changeMailOrPhone.value)) {\r\n          setValidateMsg(draft => {\r\n            draft.key.msg = '手机号尽量与微信号保持一致'\r\n            draft.key.warn = false\r\n            draft.key.isRight = true\r\n          })\r\n          return true\r\n        } else {\r\n          setValidateMsg(draft => {\r\n            draft.key.msg = '请输入正确的电话号码或邮箱'\r\n            draft.key.warn = true\r\n            draft.key.isRight = false\r\n          })\r\n          return false\r\n        }\r\n      } else {\r\n        setValidateMsg(draft => {\r\n          draft.key.msg = '邮箱或者电话不能为空'\r\n          draft.key.warn = true\r\n          draft.key.isRight = false\r\n        })\r\n        return false\r\n      }\r\n    },\r\n    validateVerification: () => {\r\n      // 验证验证码是否为空\r\n      if (validate.required(changeVerificationCode.value)) {\r\n        setValidateMsg(draft => {\r\n          draft.verification.msg = ''\r\n          draft.verification.warn = false\r\n          draft.verification.isRight = true\r\n        })\r\n        return true\r\n      } else {\r\n        setValidateMsg(draft => {\r\n          draft.verification.msg = '验证码不能为空'\r\n          draft.verification.warn = true\r\n          draft.verification.isRight = false\r\n        })\r\n        return false\r\n      }\r\n    },\r\n    // 检查密码\r\n    validatePwd: () => {\r\n      if (validate.required(changePwd.value)) {\r\n        if (!validate.checkLength(changePwd.value, 8)) {\r\n          setValidateMsg(draft => {\r\n            draft.pwd.msg = '密码不少于8位'\r\n            draft.pwd.warn = false\r\n            draft.pwd.isRight = true\r\n          })\r\n          return true\r\n        } else {\r\n          setValidateMsg(draft => {\r\n            draft.pwd.msg = '密码不少于8位'\r\n            draft.pwd.warn = true\r\n            draft.pwd.isRight = false\r\n          })\r\n          return false\r\n        }\r\n      } else {\r\n        setValidateMsg(draft => {\r\n          draft.pwd.msg = '密码不能为空'\r\n          draft.pwd.warn = true\r\n          draft.pwd.isRight = false\r\n        })\r\n        return false\r\n      }\r\n    },\r\n  }\r\n  const validateKey = useDebounceFn(validateForm.validatePhoneOrMail, 300)\r\n  const validatePwd = useDebounceFn(validateForm.validatePwd, 300)\r\n  const validateVerification = useDebounceFn(validateForm.validateVerification, 300)\r\n  const checkValidate = useDebounceFn(() => {\r\n    if (validateMsg.key.isRight && validateMsg.pwd.isRight && validateMsg.verification.isRight) {\r\n      setIsValidateRight(true)\r\n    } else {\r\n      setIsValidateRight(false)\r\n    }\r\n  }, 300)\r\n\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault()\r\n    let avatarFormdata = new FormData()\r\n    avatarFormdata.set('img', avatar)\r\n    avatarFormdata.set('phone', phone.value)\r\n    updateUserR.run({ gender, username: name.value, emailaddr: mail.value, phone: phone.value })\r\n    if (typeof avatarFormdata.get('img') !== 'string') updateUserAvatarR.run(avatarFormdata)\r\n    userInfoR.run()\r\n  }\r\n  useOnUpdate(() => {\r\n    if (verificationStatus === true) {\r\n      setVerificationValue(`重新发送验证码(${count})`)\r\n    } else {\r\n      setVerificationValue('获取验证码')\r\n    }\r\n  }, [count])\r\n\r\n  return (\r\n    <Spin spinning={loadStatus}>\r\n      <form className={style.container} onSubmit={handleSubmit}>\r\n        <Avatar msg='修改头像' bind={setAvatar} initialData={avatar} />\r\n        <Input type='text' bind={name} name='用户名' msg='最长超过7个字符' readOnly update={true} />\r\n        <RadioGroup name='性别' radioList={['男', '女']} bind={setGender} initialData={gender} />\r\n        <Input type='text' bind={mail} name='邮箱' msg='修改需要源邮箱认证' readOnly update={true} />\r\n        <Input type='text' bind={phone} name='电话' msg='修改需要源手机认证' readOnly update={true} />\r\n        <div className={style.pwd}>\r\n          <h2 onClick={() => setShowModal(true)}>修改密码</h2>\r\n          <span>修改密码需要手机或者邮箱验证</span>\r\n        </div>\r\n        <Modal\r\n          title=\"修改密码\"\r\n          visible={showModal}\r\n          onOk={handleModalOk}\r\n          onCancel={handleModalCancel}\r\n          confirmLoading={updatePwdR.loading}\r\n          okButtonProps={{ disabled: !isValidateRight}}\r\n        >\r\n          <form className={style.fix} onInput={checkValidate.run}>\r\n            <Input type='text' onInput={validateKey.run} bind={changeMailOrPhone} name='手机/邮箱' msg={validateMsg.key.msg} warn={validateMsg.key.warn} />\r\n            <Input type='password' onInput={validatePwd.run} bind={changePwd} name='新密码' msg={validateMsg.pwd.msg} warn={validateMsg.pwd.warn} />\r\n            <Input type='text' onInput={validateVerification.run} bind={changeVerificationCode} name='验证码' hasBtn btnValue={verificationValue} btnStatus={verificationStatus} btnCallback={handleGetVerificationCode} msg={validateMsg.verification.msg} warn={validateMsg.verification.warn} />\r\n          </form>\r\n\r\n        </Modal>\r\n        <Button type='submit' className={style.btn} value='保存' loading={updateUserR.loading}/>\r\n      </form>\r\n    </Spin>\r\n\r\n  )\r\n}\r\n\r\nexport default Info\r\n"],"sourceRoot":""}