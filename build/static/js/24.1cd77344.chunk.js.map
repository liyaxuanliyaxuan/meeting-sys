{"version":3,"sources":["pages/Login/Pwd/Pwd.module.scss","pages/Login/Pwd/index.tsx"],"names":["module","exports","Pwd","auth","authContainer","useContainer","key","useChange","pwd","useState","isValidateRight","setIsValidateRight","history","useHistory","useStorage","setToken","useImmer","mailOrPhone","msg","warn","isRight","validateMsg","setValidateMsg","loginR","useRequest","login","manual","onSuccess","result","params","code","draft","message","data","jwt","setIsLogin","push","validateForm","validate","required","value","isPhoneNumber","isEmail","validateKey","useDebounceFn","validatePwd","checkValidate","handleSubmit","e","a","preventDefault","run","className","style","form","onSubmit","onInput","type","bind","placeholder","isOnEye","btn","disabled","loading"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,KAAO,kBAAkB,IAAM,mB,oMC+HlCC,UAzGf,YAAwC,eACtC,IAAMC,EAAOC,IAAcC,eACrBC,EAAMC,YAAU,IAChBC,EAAMD,YAAU,IAHe,EAISE,oBAAS,GAJlB,mBAI9BC,EAJ8B,KAIbC,EAJa,KAK/BC,EAAUC,cALqB,EAMCC,YAAW,cANZ,mBAMvBC,GANuB,mBAOCC,YAAS,CAC7CC,YAAa,CAAEC,IAAK,iFAAiBC,MAAM,EAAOC,SAAS,GAC3DZ,IAAK,CAAEU,IAAK,GAAIC,MAAM,EAAOC,SAAS,MATH,mBAO9BC,EAP8B,KAOjBC,EAPiB,KAY/BC,EAASC,YAAWC,IAAO,CAC/BC,QAAQ,EACRC,UAAW,SAACC,EAAQC,GACdD,EAAOE,KAAO,EAChBR,GAAe,SAAAS,GACbA,EAAMvB,IAAIU,IAAMU,EAAOI,QACvBD,EAAMvB,IAAIW,MAAO,MAGnBG,GAAe,SAAAS,GACbA,EAAMvB,IAAIU,IAAM,GAChBa,EAAMvB,IAAIW,MAAO,KAEfS,EAAOK,OACTlB,EAASa,EAAOK,KAAKC,KACrB/B,EAAKgC,YAAW,GAChBvB,EAAQwB,KAAK,gBAMfC,EACiB,WACnB,OAAIC,IAASC,SAASjC,EAAIkC,OAEpBF,IAASG,cAAcnC,EAAIkC,QAAUF,IAASI,QAAQpC,EAAIkC,QAC5DlB,GAAe,SAAAS,GACbA,EAAMd,YAAYC,IAAM,iFACxBa,EAAMd,YAAYE,MAAO,EACzBY,EAAMd,YAAYG,SAAU,MAEvB,IAEPE,GAAe,SAAAS,GACbA,EAAMd,YAAYC,IAAM,iFACxBa,EAAMd,YAAYE,MAAO,EACzBY,EAAMd,YAAYG,SAAU,MAEvB,IAGTE,GAAe,SAAAS,GACbA,EAAMd,YAAYC,IAAM,+DACxBa,EAAMd,YAAYE,MAAO,EACzBY,EAAMd,YAAYG,SAAU,MAEvB,IAzBPiB,EA4BS,WAEX,OAAIC,IAASC,SAAS/B,EAAIgC,QACxBlB,GAAe,SAAAS,GACbA,EAAMvB,IAAIU,IAAM,GAChBa,EAAMvB,IAAIW,MAAO,EACjBY,EAAMvB,IAAIY,SAAU,MAEf,IAEPE,GAAe,SAAAS,GACbA,EAAMvB,IAAIU,IAAM,uCAChBa,EAAMvB,IAAIW,MAAO,EACjBY,EAAMvB,IAAIY,SAAU,MAEf,IAIPuB,EAAcC,YAAcP,EAAkC,KAC9DQ,EAAcD,YAAcP,EAA0B,KACtDS,EAAgBF,aAAc,WAC9BvB,EAAYJ,YAAYG,SAAWC,EAAYb,IAAIY,QACrDT,GAAmB,GAEnBA,GAAmB,KAEpB,KAEGoC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBD,EAAEE,iBACF3B,EAAO4B,IAAI7C,EAAIkC,MAAOhC,EAAIgC,OAFP,2CAAH,sDAKlB,OACE,0BAAMY,UAAWC,IAAMC,KAAMC,SAAUR,EAAcS,QAASV,EAAcK,KAC1E,kBAAC,IAAD,CAAOM,KAAK,OAAOD,QAASb,EAAYQ,IAAKO,KAAMpD,EAAKqD,YAAY,kCAASzC,IAAKG,EAAYJ,YAAYC,IAAKC,KAAME,EAAYJ,YAAYE,OAC7I,kBAAC,IAAD,CAAOsC,KAAK,WAAWD,QAASX,EAAYM,IAAKO,KAAMlD,EAAKmD,YAAY,eAAKzC,IAAKG,EAAYb,IAAIU,IAAKC,KAAME,EAAYb,IAAIW,KAAMyC,SAAS,IAC5I,kBAAC,IAAD,CAAQR,UAAWC,IAAMQ,IAAKC,UAAWpD,EAAiBqD,QAASxC,EAAOwC","file":"static/js/24.1cd77344.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Pwd_form__14BVb\",\"btn\":\"Pwd_btn__2jgw5\"};","import React, { ReactElement, useState } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useImmer } from 'use-immer';\r\n\r\nimport Button from '@/components/login/LoginButton';\r\nimport Input from '@/components/login/LoginInput';\r\nimport {\r\n  useChange,\r\n  useStorage,\r\n  useOnUpdate\r\n} from '@/hooks';\r\nimport { login } from '@/services/apis/user';\r\nimport authContainer from '@/store/auth';\r\nimport validate from '@/utils/validate';\r\nimport { useRequest, useDebounce, useDebounceFn } from '@umijs/hooks';\r\n\r\nimport style from './Pwd.module.scss';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nfunction Pwd({ }: Props): ReactElement {\r\n  const auth = authContainer.useContainer()\r\n  const key = useChange('')\r\n  const pwd = useChange('')\r\n  const [isValidateRight, setIsValidateRight] = useState(false)\r\n  const history = useHistory()\r\n  const [token, setToken, clearToken] = useStorage('user_token')\r\n  const [validateMsg, setValidateMsg] = useImmer({\r\n    mailOrPhone: { msg: '手机号尽量与微信号保持一致', warn: false, isRight: false },\r\n    pwd: { msg: '', warn: false, isRight: false },\r\n  })\r\n\r\n  const loginR = useRequest(login, {\r\n    manual: true,\r\n    onSuccess: (result, params) => {\r\n      if (result.code < 0) {\r\n        setValidateMsg(draft => {\r\n          draft.pwd.msg = result.message\r\n          draft.pwd.warn = true\r\n        })\r\n      } else {\r\n        setValidateMsg(draft => {\r\n          draft.pwd.msg = ''\r\n          draft.pwd.warn = false\r\n        })\r\n        if (result.data) {\r\n          setToken(result.data.jwt)\r\n          auth.setIsLogin(true)\r\n          history.push('/center')\r\n        }\r\n      }\r\n\r\n    }\r\n  })\r\n  const validateForm = {\r\n    validatePhoneOrMail: () => {\r\n      if (validate.required(key.value)) {\r\n        // 验证正确格式\r\n        if (validate.isPhoneNumber(key.value) || validate.isEmail(key.value)) {\r\n          setValidateMsg(draft => {\r\n            draft.mailOrPhone.msg = '手机号尽量与微信号保持一致'\r\n            draft.mailOrPhone.warn = false\r\n            draft.mailOrPhone.isRight = true\r\n          })\r\n          return true\r\n        } else {\r\n          setValidateMsg(draft => {\r\n            draft.mailOrPhone.msg = '请输入正确的电话号码或邮箱'\r\n            draft.mailOrPhone.warn = true\r\n            draft.mailOrPhone.isRight = false\r\n          })\r\n          return false\r\n        }\r\n      } else {\r\n        setValidateMsg(draft => {\r\n          draft.mailOrPhone.msg = '邮箱或者电话不能为空'\r\n          draft.mailOrPhone.warn = true\r\n          draft.mailOrPhone.isRight = false\r\n        })\r\n        return false\r\n      }\r\n    },\r\n    validatePwd: () => {\r\n      // 验证密码是否为空\r\n      if (validate.required(pwd.value)) {\r\n        setValidateMsg(draft => {\r\n          draft.pwd.msg = ''\r\n          draft.pwd.warn = false\r\n          draft.pwd.isRight = true\r\n        })\r\n        return true\r\n      } else {\r\n        setValidateMsg(draft => {\r\n          draft.pwd.msg = '密码不能为空'\r\n          draft.pwd.warn = true\r\n          draft.pwd.isRight = false\r\n        })\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  const validateKey = useDebounceFn(validateForm.validatePhoneOrMail, 300)\r\n  const validatePwd = useDebounceFn(validateForm.validatePwd, 300)\r\n  const checkValidate = useDebounceFn(() => {\r\n    if (validateMsg.mailOrPhone.isRight && validateMsg.pwd.isRight) {\r\n      setIsValidateRight(true)\r\n    } else {\r\n      setIsValidateRight(false)\r\n    }\r\n  }, 300)\r\n\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault()\r\n    loginR.run(key.value, pwd.value)\r\n  }\r\n\r\n  return (\r\n    <form className={style.form} onSubmit={handleSubmit} onInput={checkValidate.run}>\r\n      <Input type='text' onInput={validateKey.run} bind={key} placeholder='手机号/邮箱' msg={validateMsg.mailOrPhone.msg} warn={validateMsg.mailOrPhone.warn} />\r\n      <Input type='password' onInput={validatePwd.run} bind={pwd} placeholder='密码' msg={validateMsg.pwd.msg} warn={validateMsg.pwd.warn} isOnEye={true} />\r\n      <Button className={style.btn} disabled={!isValidateRight} loading={loginR.loading} />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Pwd\r\n"],"sourceRoot":""}