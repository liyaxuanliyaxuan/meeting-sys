{"version":3,"sources":["pages/Login/Pwd/Pwd.module.scss","pages/Login/Pwd/index.tsx"],"names":["module","exports","Pwd","auth","authContainer","useContainer","key","useChange","pwd","useState","isValidateRight","setIsValidateRight","history","useHistory","useStorage","setToken","useImmer","mailOrPhone","msg","warn","isRight","validateMsg","setValidateMsg","loginR","useRequest","login","manual","onSuccess","result","params","code","draft","message","data","jwt","setIsLogin","push","validateForm","validate","required","value","isPhoneNumber","isEmail","validateKey","useDebounceFn","validatePwd","checkValidate","handleSubmit","e","a","preventDefault","run","className","style","form","onSubmit","onInput","type","bind","placeholder","isOnEye","btn","disabled","loading"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,KAAO,kBAAkB,IAAM,mB,qMC0JlCC,UAnIf,YAAuC,eACrC,IAAMC,EAAOC,IAAcC,eACrBC,EAAMC,YAAU,IAChBC,EAAMD,YAAU,IAHc,EAIUE,oBAAS,GAJnB,mBAI7BC,EAJ6B,KAIZC,EAJY,KAK9BC,EAAUC,cALoB,EAMEC,YAAW,cANb,mBAMtBC,GANsB,mBAOEC,YAAS,CAC7CC,YAAa,CACXC,IAAK,iFACLC,MAAM,EACNC,SAAS,GAEXZ,IAAK,CAAEU,IAAK,GAAIC,MAAM,EAAOC,SAAS,MAbJ,mBAO7BC,EAP6B,KAOhBC,EAPgB,KAgB9BC,EAASC,YAAWC,IAAO,CAC/BC,QAAQ,EACRC,UAAW,SAACC,EAAQC,GACdD,EAAOE,KAAO,EAChBR,GAAe,SAACS,GACdA,EAAMvB,IAAIU,IAAMU,EAAOI,QACvBD,EAAMvB,IAAIW,MAAO,MAGnBG,GAAe,SAACS,GACdA,EAAMvB,IAAIU,IAAM,GAChBa,EAAMvB,IAAIW,MAAO,KAEfS,EAAOK,OACTlB,EAASa,EAAOK,KAAKC,KACrB/B,EAAKgC,YAAW,GAChBvB,EAAQwB,KAAK,gBAKfC,EACiB,WACnB,OAAIC,IAASC,SAASjC,EAAIkC,OAEpBF,IAASG,cAAcnC,EAAIkC,QAAUF,IAASI,QAAQpC,EAAIkC,QAC5DlB,GAAe,SAACS,GACdA,EAAMd,YAAYC,IAAM,iFACxBa,EAAMd,YAAYE,MAAO,EACzBY,EAAMd,YAAYG,SAAU,MAEvB,IAEPE,GAAe,SAACS,GACdA,EAAMd,YAAYC,IAAM,iFACxBa,EAAMd,YAAYE,MAAO,EACzBY,EAAMd,YAAYG,SAAU,MAEvB,IAGTE,GAAe,SAACS,GACdA,EAAMd,YAAYC,IAAM,+DACxBa,EAAMd,YAAYE,MAAO,EACzBY,EAAMd,YAAYG,SAAU,MAEvB,IAzBPiB,EA4BS,WAEX,OAAIC,IAASC,SAAS/B,EAAIgC,QACxBlB,GAAe,SAACS,GACdA,EAAMvB,IAAIU,IAAM,GAChBa,EAAMvB,IAAIW,MAAO,EACjBY,EAAMvB,IAAIY,SAAU,MAEf,IAEPE,GAAe,SAACS,GACdA,EAAMvB,IAAIU,IAAM,uCAChBa,EAAMvB,IAAIW,MAAO,EACjBY,EAAMvB,IAAIY,SAAU,MAEf,IAIPuB,EAAcC,YAAcP,EAAkC,KAC9DQ,EAAcD,YAAcP,EAA0B,KACtDS,EAAgBF,aAAc,WAC9BvB,EAAYJ,YAAYG,SAAWC,EAAYb,IAAIY,QACrDT,GAAmB,GAEnBA,GAAmB,KAEpB,KAEGoC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBD,EAAEE,iBACF3B,EAAO4B,IAAI7C,EAAIkC,MAAOhC,EAAIgC,OAFP,2CAAH,sDAKlB,OACE,0BACEY,UAAWC,IAAMC,KACjBC,SAAUR,EACVS,QAASV,EAAcK,KAEvB,kBAAC,IAAD,CACEM,KAAK,OACLD,QAASb,EAAYQ,IACrBO,KAAMpD,EACNqD,YAAY,kCACZzC,IAAKG,EAAYJ,YAAYC,IAC7BC,KAAME,EAAYJ,YAAYE,OAEhC,kBAAC,IAAD,CACEsC,KAAK,WACLD,QAASX,EAAYM,IACrBO,KAAMlD,EACNmD,YAAY,eACZzC,IAAKG,EAAYb,IAAIU,IACrBC,KAAME,EAAYb,IAAIW,KACtByC,SAAS,IAEX,kBAAC,IAAD,CACER,UAAWC,IAAMQ,IACjBC,UAAWpD,EACXqD,QAASxC,EAAOwC","file":"static/js/29.6ce17978.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Pwd_form__2g4Go\",\"btn\":\"Pwd_btn__RpVJc\"};","/**\r\n * @ Author: zao\r\n * @ Create Time: 2020-08-20 18:49:22\r\n * @ Modified by: zao\r\n * @ Description: 密码登陆\r\n */\r\n\r\nimport React, { ReactElement, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useImmer } from \"use-immer\";\r\n\r\nimport Button from \"@/components/login/LoginButton\";\r\nimport Input from \"@/components/login/LoginInput\";\r\nimport { useChange, useStorage } from \"@/hooks\";\r\nimport { login } from \"@/services/apis/user\";\r\nimport authContainer from \"@/store/auth\";\r\nimport validate from \"@/utils/validate\";\r\nimport { useRequest, useDebounce, useDebounceFn } from \"@umijs/hooks\";\r\n\r\nimport style from \"./Pwd.module.scss\";\r\n\r\ninterface Props {}\r\n\r\nfunction Pwd({}: Props): ReactElement {\r\n  const auth = authContainer.useContainer();\r\n  const key = useChange(\"\");\r\n  const pwd = useChange(\"\");\r\n  const [isValidateRight, setIsValidateRight] = useState(false);\r\n  const history = useHistory();\r\n  const [token, setToken, clearToken] = useStorage(\"user_token\");\r\n  const [validateMsg, setValidateMsg] = useImmer({\r\n    mailOrPhone: {\r\n      msg: \"手机号尽量与微信号保持一致\",\r\n      warn: false,\r\n      isRight: false,\r\n    },\r\n    pwd: { msg: \"\", warn: false, isRight: false },\r\n  });\r\n\r\n  const loginR = useRequest(login, {\r\n    manual: true,\r\n    onSuccess: (result, params) => {\r\n      if (result.code < 0) {\r\n        setValidateMsg((draft) => {\r\n          draft.pwd.msg = result.message;\r\n          draft.pwd.warn = true;\r\n        });\r\n      } else {\r\n        setValidateMsg((draft) => {\r\n          draft.pwd.msg = \"\";\r\n          draft.pwd.warn = false;\r\n        });\r\n        if (result.data) {\r\n          setToken(result.data.jwt);\r\n          auth.setIsLogin(true);\r\n          history.push(\"/center\");\r\n        }\r\n      }\r\n    },\r\n  });\r\n  const validateForm = {\r\n    validatePhoneOrMail: () => {\r\n      if (validate.required(key.value)) {\r\n        // 验证正确格式\r\n        if (validate.isPhoneNumber(key.value) || validate.isEmail(key.value)) {\r\n          setValidateMsg((draft) => {\r\n            draft.mailOrPhone.msg = \"手机号尽量与微信号保持一致\";\r\n            draft.mailOrPhone.warn = false;\r\n            draft.mailOrPhone.isRight = true;\r\n          });\r\n          return true;\r\n        } else {\r\n          setValidateMsg((draft) => {\r\n            draft.mailOrPhone.msg = \"请输入正确的电话号码或邮箱\";\r\n            draft.mailOrPhone.warn = true;\r\n            draft.mailOrPhone.isRight = false;\r\n          });\r\n          return false;\r\n        }\r\n      } else {\r\n        setValidateMsg((draft) => {\r\n          draft.mailOrPhone.msg = \"邮箱或者电话不能为空\";\r\n          draft.mailOrPhone.warn = true;\r\n          draft.mailOrPhone.isRight = false;\r\n        });\r\n        return false;\r\n      }\r\n    },\r\n    validatePwd: () => {\r\n      // 验证密码是否为空\r\n      if (validate.required(pwd.value)) {\r\n        setValidateMsg((draft) => {\r\n          draft.pwd.msg = \"\";\r\n          draft.pwd.warn = false;\r\n          draft.pwd.isRight = true;\r\n        });\r\n        return true;\r\n      } else {\r\n        setValidateMsg((draft) => {\r\n          draft.pwd.msg = \"密码不能为空\";\r\n          draft.pwd.warn = true;\r\n          draft.pwd.isRight = false;\r\n        });\r\n        return false;\r\n      }\r\n    },\r\n  };\r\n  const validateKey = useDebounceFn(validateForm.validatePhoneOrMail, 300);\r\n  const validatePwd = useDebounceFn(validateForm.validatePwd, 300);\r\n  const checkValidate = useDebounceFn(() => {\r\n    if (validateMsg.mailOrPhone.isRight && validateMsg.pwd.isRight) {\r\n      setIsValidateRight(true);\r\n    } else {\r\n      setIsValidateRight(false);\r\n    }\r\n  }, 300);\r\n\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    loginR.run(key.value, pwd.value);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={style.form}\r\n      onSubmit={handleSubmit}\r\n      onInput={checkValidate.run}\r\n    >\r\n      <Input\r\n        type=\"text\"\r\n        onInput={validateKey.run}\r\n        bind={key}\r\n        placeholder=\"手机号/邮箱\"\r\n        msg={validateMsg.mailOrPhone.msg}\r\n        warn={validateMsg.mailOrPhone.warn}\r\n      />\r\n      <Input\r\n        type=\"password\"\r\n        onInput={validatePwd.run}\r\n        bind={pwd}\r\n        placeholder=\"密码\"\r\n        msg={validateMsg.pwd.msg}\r\n        warn={validateMsg.pwd.warn}\r\n        isOnEye={true}\r\n      />\r\n      <Button\r\n        className={style.btn}\r\n        disabled={!isValidateRight}\r\n        loading={loginR.loading}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Pwd;\r\n"],"sourceRoot":""}